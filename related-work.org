#+TITLE: Related Work

* "A Generator for Type Checkers" H. Gast
* "Formally Specified Type Checkers for Domain Specific Languages: Experience Report" van den Brand, van der Meer, Serebrenik, Hofkamp
  - Designed for the quick prototyping of the specification language
    Chi 2.0, a language for describing concurrent systems.
  - Well integrated in the Chi tool-chain.
  - Typing rules are described in the MSDF format that describes
    typing rules in transition like format. One advantage is that
    cntext information are only mentioned when needed. This is great
    for extensibility and modularity.
  - MSDF also features module structures and imports. Judgments and
    related stuff are defined implicitly using the transition system.
  - MSDF is translated to Pyke. Originally Pyton was chosen as target,
    but Python does not feature backtracking capabilties by default
    (for cases in which more than one rule is applicable). Pyke has
    this feature and is inspired by Prolog (it uses the concet of
    backwardchaining rules).
  - The transformation form MSDF to Pyke is done with ASD+SDF.
  - The authors noticed that the integration in the Chi tool-chain
    required specific knowlege about the AST/DAST, thus protability to
    other languages is difficult.
  - The authors also have an interesting perspective on type systems
    as state machines.
* "Semantics of Programming Languages: A Tool-oriented Approach" Heering, Jan and Klint, Paul
  - Observation: The fields semantics, tools and languages drifting
    further apart.
  - Reason: Semantics are rarely incooperated into pratical systems
    and hence do not influence tools and (partly) languages.
  - Solution: Generate as many language-based tools as possible form a
    semantic definition. The authors provide a hughe list of tools
    that could possibly be generated. Currently only generators for
    parsers and lexers are widely used. The authors have the vision of
    a development workbench for languages that can be used to generate
    most tools from a semantic definition.
  - Existing generation tools that can generate type checkers are
    + Synthesizer Generator
    + PSG
    + ASF+SDF
    + Centaur
    + Gem-Mex
  - Other tools that could potentially generate type checkers
    + SIS
    + DSP
    + GAG
    + SPS
    + MESS
    + Actress
    + Pregmatic
    + LDL
    + Eli
* "Programmable Type Systems for Domain Specific Languages" Peter Thiemann
* "Should Your Specification Language Be Typed?" Lamport, Paulson
