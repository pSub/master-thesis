module runtime/modelware/tree2model

imports
  
  runtime/modelware/signatures
  runtime/nabl/-
  runtime/index/-
  runtime/editor/-

rules
  
  mw-tree2model: t       -> M(<origin-track-forced(mw-term2obj)>)
  mw-term2obj  : c#(t*)  -> Obj(<mw-def-uris>, QID("ast", c), <map(mw-term2slot)> t*)
  mw-term2slot : None()  -> None()
  mw-term2slot : Some(t) -> Some(<mw-term2val> t)
  mw-term2slot : t*      -> <map(mw-term2val); mw-combine>
  mw-term2slot : t       -> <mw-term2val>
  mw-term2val  : t       -> Data(t) where is-string; not(mw-ref-uri)
  mw-term2val  : t       -> Link(<mw-ref-uri>)
  mw-term2val  : t       -> Contain(<origin-track-forced(mw-term2obj)> t) where mw-is-compound

rules
  
  mw-def-uris    = get-arguments; map(get-annos; filter(?Def(_); try(origin-location))); concat
  mw-ref-uri     = get-annos; fetch-elem(?Use(_)); (nabl-collect-one-resolved-def; index-get-all; Hd; ?Def(_); try(origin-location) <+ ?Use(<id>) <+ !Unresolved())
  mw-is-compound = where(not(?Some(_))); explode-term + map(explode-term)
  
  mw-combine = ?[]
  mw-combine:
    t* -> c#([<map(get-arguments; Hd)> t*])
    where
      c#(_) := <Hd> t*

