module tests-utils

imports utils

rules
    
    top-sort-tests = apply-test(!"top-sort", top-sort,
                                ![],
                                ![]);
                     apply-test(!"top-sort", top-sort,
                                ![(1, [2]), (2, [])],
                                ![2, 1]);
                     apply-test(!"top-sort", top-sort,
                                ![(4, [2]), (1, [4, 3]), (2, []), (3, [])],
                                ![2, 4, 3, 1]);
                     apply-test(!"top-sort", top-sort,
                                ![(4, [1]), (2, [1, 4, 3, 5, 8]), (3, [4]), (5, [3]), (6, [8]), (1, []), (7, []), (8, [])],
                                ![1, 4, 3, 5, 7, 8, 2, 6]);
                     apply-and-fail(!"top-sort", top-sort,
                                ![(1, [1])]);
                     apply-and-fail(!"top-sort", top-sort,
                                ![(1, []), (2, [1, 3]), (3, [4]), (4, [2])])

    has-edges-tests = apply-test(!"has-edges", has-edges,
                                 ![(1, [2,3])], ![[2,3]]);
                      apply-test(!"has-edges", has-edges,
                                 ![(1, [2,3]), (2,[]), (3,[4,5])], ![[2,3],(2,[]),[4,5]]);
                      apply-and-fail(!"has-edges", has-edges,
                                 ![(1, [])]);
                      apply-and-fail(!"has-edges", has-edges,
                                 ![(1,[]), (2,[]), (3, [])])

    replace-tests = apply-test(!"subst", replace(|"x", "a"),
                              !["x", "b", "c"],
                              !["a", "b", "c"]);
                   apply-test(!"subst", replace(|"x", "a"),
                              ![],
                              ![]);
                   apply-test(!"subst", replace(|"x", "a"),
                              !"x",
                              !"a");
                   apply-test(!"subst", replace(|"x", [1, 2, 3]),
                              !["x", ["a", "x", "b"], "y"],
                              ![[1, 2, 3], ["a", [1, 2, 3], "b"], "y"])

    until-tests = apply-and-fail(!"until", until(id),
                             ![]);
                  apply-test(!"until", until(id),
                             ![1,2,3], 1);
                  apply-and-fail(!"until", until(fail),
                             ![1,2,3]);
                  apply-test(!"until", until(?2),
                             ![1,2,3], 2)

    delete-tests = apply-test(!"delete", delete,
                              !(1, []), ![]);
                   apply-test(!"delete", delete,
                              !(1, [1,2,3]), ![2,3]);
                   apply-test(!"delete", delete,
                              !(1, [1,2,1]), ![2, 1])

    group-tests = apply-test(!"group", group(eq),
                             ![1,2,3,4,5,6], ![[1],[2],[3],[4],[5],[6]]);
                  apply-test(!"group", group(eq),
                             ![], ![]);
                  apply-test(!"group", group(eq),
                             ![1,2,2,3,4,4,5], ![[1],[2,2],[3],[4,4],[5]]);
                  apply-test(!"group", group(eq),
                             ![1,2,3,1,2,3], ![[1,1],[2,2],[3,3]])

    cartesian-product-tests = apply-test(!"cartesian-product", cartesian-product,
                                         ![], ![[]]);
                              apply-test(!"cartesian-product", cartesian-product,
                                         ![[1,2]], ![[1],[2]]);
                              apply-test(!"cartesian-product", cartesian-product,
                                         ![[1,2],[3,4]], ![[1,3],[1,4],[2,3],[2,4]]);
                              apply-test(!"cartesian-product", cartesian-product,
                                         ![[1,2],[3,4],[5,6]], ![[1,3,5],[1,3,6],[1,4,5],[1,4,6],[2,3,5],[2,3,6],[2,4,5],[2,4,6]])

    permute-tests = apply-test(!"permute", permute,
                               ![1,2], ![[1,2], [2,1]]);
                    apply-test(!"permute", permute,
                               ![1,2,3], ![[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]])

    make-fresh-tests = apply-test(!"make-fresh", {|Fresh: make-fresh|},
                                  !"a", !"a0");
                       apply-test(!"make-fresh", {|Fresh: map(make-fresh)|},
                                  !["a", "b", "c"], !["a0", "b0", "c0"]);        
                       apply-test(!"make-fresh", {|Fresh: map(make-fresh)|},
                                  !["a", "a", "a"], !["a0", "a1", "a2"]);
                       apply-test(!"make-fresh", ({|Fresh: make-fresh|}, {|Fresh: make-fresh|}),
                                  !("a", "a"), !("a0", "a0"))


    tests-utils = 
        top-sort-tests; replace-tests; until-tests; delete-tests; group-tests;
        cartesian-product-tests; has-edges-tests; make-fresh-tests; permute-tests