module SimplyTypedLambdaCalculus

imports Common

exports
	
  context-free start-symbols
    Exp
    
  lexical syntax
  	[a-z]+ -> ID
	[0-9]+ -> Int
    
  context-free syntax
	Int -> Exp {cons("Int")}
	ID -> Exp {cons("Var")}
  	"\\" ID ":" Type "." Exp -> Exp {cons("Abs")}
  	Exp Exp -> Exp {cons("App")}
  	-> RecordEntries {cons("RecordEntries")}
  	ID "=" Exp RecordEntries -> RecordEntries {cons("RecordEntries")}
  	"{" RecordEntries"}" -> Exp {cons("Record")}
  	Exp "." ID -> Exp {cons("Projection")}
  	
  context-free syntax
  	Type "->" Type -> Type {cons("T-Arrow")}
  	-> TRecordEntries {cons("TRecordEntries")}
	ID ":" Type TRecordEntries -> TRecordEntries {cons("TRecordEntries")}
	"{" TRecordEntries "}" -> Type {cons("TRecord")}
