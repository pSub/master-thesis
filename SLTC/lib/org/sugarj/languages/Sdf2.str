module org/sugarj/languages/Sdf2

signature
  constructors
                               : Sdf2Module -> JavaCompilationUnit
    definition                 : Sdf2Definition -> Sdf2SDF
                               : List(Sdf2Alias) -> Sdf2Aliases
    alias                      : Sdf2Symbol * Sdf2Symbol -> Sdf2Alias
                               : List(Sdf2Restriction) -> Sdf2Restrictions
    follow                     : Sdf2Symbols * Sdf2Lookaheads -> Sdf2Restriction
    list                       : List(Sdf2Lookahead) -> Sdf2Lookaheads
    alt                        : Sdf2Lookaheads * Sdf2Lookaheads -> Sdf2Lookaheads
    single                     : Sdf2Lookahead -> Sdf2Lookaheads
    seq                        : Sdf2CharClass * Sdf2Lookaheads -> Sdf2Lookahead
    char-class                 : Sdf2CharClass -> Sdf2Lookahead
    unquoted                   : Sdf2IdCon -> Sdf2Label
    quoted                     : Sdf2StrCon -> Sdf2Label
    quoted-fun                 : Sdf2StrCon -> Sdf2FunctionName
    unquoted-fun               : Sdf2IdCon -> Sdf2FunctionName
                               : String -> Sdf2SingleQuotedStrCon
                               : String -> Sdf2Sort
    union                      : Sdf2CharClass * Sdf2CharClass -> Sdf2CharClass
    isect                      : Sdf2CharClass * Sdf2CharClass -> Sdf2CharClass
    diff                       : Sdf2CharClass * Sdf2CharClass -> Sdf2CharClass
    comp                       : Sdf2CharClass -> Sdf2CharClass
    simple-charclass           : Sdf2OptCharRanges -> Sdf2CharClass
    present                    : Sdf2CharRanges -> Sdf2OptCharRanges
    absent                     : Sdf2OptCharRanges
    conc                       : Sdf2CharRanges * Sdf2CharRanges -> Sdf2CharRanges
                               : Sdf2CharRange -> Sdf2CharRanges
    range                      : Sdf2Character * Sdf2Character -> Sdf2CharRange
                               : Sdf2Character -> Sdf2CharRange
    label_start                : Sdf2Character
    bot                        : Sdf2Character
    eof                        : Sdf2Character
    top                        : Sdf2Character
    short                      : Sdf2ShortChar -> Sdf2Character
    numeric                    : Sdf2NumChar -> Sdf2Character
                               : String -> Sdf2ShortChar
                               : String -> Sdf2NumChar
                               : List(Sdf2Priority) -> Sdf2Priorities
    assoc                      : Sdf2Group * Sdf2Associativity * Sdf2Group -> Sdf2Priority
    chain                      : List(Sdf2Group) -> Sdf2Priority
    assoc-group                : Sdf2Associativity * Sdf2Productions -> Sdf2Group
    prods-group                : Sdf2Productions -> Sdf2Group
    simple-group               : Sdf2Production -> Sdf2Group
    non-transitive             : Sdf2Group -> Sdf2Group
    with-arguments             : Sdf2Group * Sdf2ArgumentIndicator -> Sdf2Group
    default                    : List(Sdf2NatCon) -> Sdf2ArgumentIndicator
    assoc                      : Sdf2Associativity
    non-assoc                  : Sdf2Associativity
    right                      : Sdf2Associativity
    left                       : Sdf2Associativity
    renamed-module             : Sdf2ModuleName * Sdf2Renamings -> Sdf2Import
    'module                    : Sdf2ModuleName -> Sdf2Import
                               : List(Sdf2Import) -> Sdf2Imports
    imports                    : Sdf2Imports -> Sdf2ImpSection
    parameterized              : Sdf2ModuleId * Sdf2Symbols -> Sdf2ModuleName
    unparameterized            : Sdf2ModuleId -> Sdf2ModuleName
                               : List(Sdf2Section) -> Sdf2Sections
    hiddens                    : Sdf2Grammar -> Sdf2Section
    exports                    : Sdf2Grammar -> Sdf2Section
    'module                    : Sdf2ModuleName * List(Sdf2ImpSection) * Sdf2Sections -> Sdf2Module
                               : List(Sdf2Module) -> Sdf2Definition
                               : String -> Sdf2ModuleId
    production                 : Sdf2Production * Sdf2Production -> Sdf2Renaming
    symbol                     : Sdf2Symbol * Sdf2Symbol -> Sdf2Renaming
    renamings                  : List(Sdf2Renaming) -> Sdf2Renamings
    file-start                 : Sdf2Symbol
    start                      : Sdf2Symbol
    label                      : Sdf2Label * Sdf2Symbol -> Sdf2Symbol
    ci-lit                     : Sdf2SingleQuotedStrCon -> Sdf2Symbol
    lit                        : Sdf2StrCon -> Sdf2Symbol
    parameterized-sort         : Sdf2Sort * List(Sdf2Symbol) -> Sdf2Symbol
    sort                       : Sdf2Sort -> Sdf2Symbol
    char-class                 : Sdf2CharClass -> Sdf2Symbol
    lifting                    : Sdf2Symbol -> Sdf2Symbol
    strategy                   : Sdf2Symbol * Sdf2Symbol -> Sdf2Symbol
    alt                        : Sdf2Symbol * Sdf2Symbol -> Sdf2Symbol
    func                       : Sdf2Symbols * Sdf2Symbol -> Sdf2Symbol
    tuple                      : Sdf2Symbol * List(Sdf2Symbol) -> Sdf2Symbol
    iter-star-sep              : Sdf2Symbol * Sdf2Symbol -> Sdf2Symbol
    iter-sep                   : Sdf2Symbol * Sdf2Symbol -> Sdf2Symbol
    iter-star                  : Sdf2Symbol -> Sdf2Symbol
    iter                       : Sdf2Symbol -> Sdf2Symbol
    opt                        : Sdf2Symbol -> Sdf2Symbol
    seq                        : Sdf2Symbol * List(Sdf2Symbol) -> Sdf2Symbol
    empty                      : Sdf2Symbol
    layout                     : Sdf2Symbol
    varsym                     : Sdf2Symbol -> Sdf2Symbol
    lex                        : Sdf2Symbol -> Sdf2Symbol
    cf                         : Sdf2Symbol -> Sdf2Symbol
                               : List(Sdf2Production) -> Sdf2Productions
    prefix-fun                 : Sdf2FunctionName * List(Sdf2Symbol) * Sdf2Symbol * Sdf2Attributes -> Sdf2Production
    prod                       : Sdf2Symbols * Sdf2Symbol * Sdf2Attributes -> Sdf2Production
    no-attrs                   : Sdf2Attributes
    attrs                      : List(Sdf2Attribute) -> Sdf2Attributes
    avoid                      : Sdf2Attribute
    prefer                     : Sdf2Attribute
    reject                     : Sdf2Attribute
    assoc                      : Sdf2Associativity -> Sdf2Attribute
    bracket                    : Sdf2Attribute
    'id                        : Sdf2ModuleName -> Sdf2Attribute
    term                       : Sdf2ATermAttribute -> Sdf2Attribute
    default                    : Sdf2ATerm -> Sdf2ATermAttribute
    context-free-restrictions  : Sdf2Restrictions -> Sdf2Grammar
    lexical-restrictions       : Sdf2Restrictions -> Sdf2Grammar
    context-free-priorities    : Sdf2Priorities -> Sdf2Grammar
    lexical-priorities         : Sdf2Priorities -> Sdf2Grammar
    aliases                    : Sdf2Aliases -> Sdf2Grammar
    restrictions               : Sdf2Restrictions -> Sdf2Grammar
    context-free-start-symbols : Sdf2Symbols -> Sdf2Grammar
    lexical-start-symbols      : Sdf2Symbols -> Sdf2Grammar
    kernel-start-symbols       : Sdf2Symbols -> Sdf2Grammar
    'sorts                     : Sdf2Symbols -> Sdf2Grammar
    priorities                 : Sdf2Priorities -> Sdf2Grammar
    imp-section                : Sdf2ImpSection -> Sdf2Grammar
    lexical-variables          : Sdf2Productions -> Sdf2Grammar
    variables                  : Sdf2Productions -> Sdf2Grammar
    context-free-syntax        : Sdf2Productions -> Sdf2Grammar
    lexical-syntax             : Sdf2Productions -> Sdf2Grammar
    syntax                     : Sdf2Productions -> Sdf2Grammar
    conc-grammars              : Sdf2Grammar * Sdf2Grammar -> Sdf2Grammar
    empty-grammar              : Sdf2Grammar
                               : List(Sdf2Symbol) -> Sdf2Symbols
    default                    : List(Sdf2ATerm) -> Sdf2Annotation
    annotated                  : Sdf2ATerm * Sdf2Annotation -> Sdf2ATerm
    list                       : List(Sdf2ATerm) -> Sdf2ATerm
    placeholder                : Sdf2ATerm -> Sdf2ATerm
    appl                       : Sdf2AFun * List(Sdf2ATerm) -> Sdf2ATerm
    fun                        : Sdf2AFun -> Sdf2ATerm
    real                       : Sdf2RealCon -> Sdf2ATerm
    int                        : Sdf2IntCon -> Sdf2ATerm
    unquoted                   : Sdf2IdCon -> Sdf2AFun
    quoted                     : Sdf2StrCon -> Sdf2AFun
                               : String -> Sdf2IdCon
                               : String -> Sdf2StrCon
    real-con                   : Sdf2IntCon * Sdf2NatCon * Sdf2OptExp -> Sdf2RealCon
    absent                     : Sdf2OptExp
    present                    : Sdf2IntCon -> Sdf2OptExp
    negative                   : Sdf2NatCon -> Sdf2IntCon
    positive                   : Sdf2NatCon -> Sdf2IntCon
    natural                    : Sdf2NatCon -> Sdf2IntCon
                               : String -> Sdf2NatCon
